//Section 8 - lecture 103: min-content, max-content and the minmax()

.container {
  background-color: #ddd;
  width: 1000px;
  margin: 30px auto;

  display: grid;

  //grid-template-rows: repeat(2, 150px);

  //max-content: maximum the wide to fit the content of grid item
  //min-content: minimum to fit or wrap all content without overflow
  //grid-template-columns: max-content 1fr 1fr min-content;

  //grid-template-rows: repeat(2, min-content);
  //grid-template-rows: 150px min-content;

  //min-max: whatever happen, keep the height of row range from 150px to the min-content
  //The height will not be shrink if the content is shrink: minimum height of the row is 150px
  //The height can span as long as the content is grow
  //grid-template-rows: repeat(2, minmax(150px, min-content));

  //auto-fit and auto-fill
  grid-template-rows: repeat(2, minmax(150px, min-content));

  //auto-fill: automatically create 10 grid column track and each grid has 100px (1000px/10px = 10 grids)
  //grid-template-columns: repeat(auto-fill, 100px);

  //auto-fit: automatically create 10 grid column tracks and each grid has 100px
  //          left the empty space for the rest to fill, the empty grid has the width of 0px
  //grid-template-columns: repeat(auto-fit, 100px);

  width: 90%;
  //If the grid cannot fit 8 columns each (200px - 1600px in total)
  //or the grid width is smaller than 1600px
  //automatically add explicit row to fit all contents
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));

  //add height to explicit rows
  grid-auto-rows: 150px;
}

.item {
  padding: 20px;
  font-size: 30px;
  font-family: sans-serif;
  color: #fff;

  &--1 {
    background-color: orange;
  }

  &--2 {
    background-color: green;
  }

  &--3 {
    background-color: violet;
  }

  &--4 {
    background-color: pink;
  }

  &--5 {
    background-color: blue;
  }

  &--6 {
    background-color: brown;
  }

  &--7 {
    background-color: red;
  }

  &--8 {
    background-color: black;
  }
}
